# Universal Project Builder Configuration

# Metadata
project:
  name: "{{project_name}}"          # Placeholder for the project name
  version: "{{project_version}}"    # Placeholder for versioning
  description: "{{project_description}}"  # Brief description of the project
  author: "{{author_name}}"         # Author's name or organization
  license: "{{license_type}}"       # License type (e.g., MIT, GPL)

# Target Environment
environment:
  operating_systems:                # Supported OS platforms
    - windows
    - linux
    - macos
  languages:                        # Supported programming languages
    - python
    - javascript
    - java
    - c++
    - ruby
    - go
    - rust

# Frameworks
frameworks:
  python:
    - flask
    - django
    - fastapi
  javascript:
    - react
    - vue
    - angular
  java:
    - spring
    - maven
  c++:
    - qt
    - boost

# Project Structure
structure:
  root_directories:                 # Default root-level directories
    - "src"
    - "tests"
    - "docs"
    - "configs"
    - "build"
  config_files:                     # Default configuration files to generate
    - ".gitignore"
    - "README.md"
    - "LICENSE"
    - "requirements.txt"  # Python example
    - "package.json"      # JavaScript example

# Dependencies
dependencies:
  python:
    default: ["requests", "numpy", "pandas"]
    dev: ["pytest", "flake8", "black"]
  javascript:
    default: ["axios", "lodash"]
    dev: ["eslint", "webpack"]
  java:
    default: ["junit", "log4j"]
    dev: []
  c++:
    default: ["gtest", "boost"]
    dev: []

# Tooling
tooling:
  version_control:                  # Version control settings
    system: "git"
    ignore_file: ".gitignore"
  ci_cd:
    default: "github_actions"
    configs:
      - ".github/workflows/ci.yml"
  build_tools:
    python: "setuptools"
    javascript: "webpack"
    java: "gradle"
    c++: "cmake"

# Testing
testing:
  python:
    framework: "pytest"
    coverage: true
  javascript:
    framework: "jest"
    coverage: true
  java:
    framework: "junit"
    coverage: false
  c++:
    framework: "gtest"
    coverage: false

# Documentation
documentation:
  tools:
    - sphinx  # Python
    - jsdoc   # JavaScript
    - javadoc # Java
  directories:
    source: "docs/source"
    output: "docs/build"

# Deployment
deployment:
  python:
    tool: "twine"
    repository_url: "https://upload.pypi.org/legacy/"
  javascript:
    tool: "npm"
    repository_url: "https://registry.npmjs.org/"
  java:
    tool: "maven"
    repository_url: "https://repo.maven.apache.org/maven2/"

# Localization
localization:
  supported_languages: ["en", "es", "fr", "de", "zh", "ar"]

# Templates
templates:
  frontend:
    html: "{{frontend_html_template}}"
    css: "{{frontend_css_framework}}"  # e.g., Tailwind, Bootstrap
    js: "{{frontend_js_framework}}"    # e.g., React, Vue
  backend:
    python: "{{backend_python_framework}}"  # Flask/Django/FastAPI
    java: "{{backend_java_framework}}"      # Spring, etc.
  databases:
    sql: ["sqlite", "mysql", "postgres"]
    nosql: ["mongodb", "couchdb"]

# Placeholders for Dynamic Substitution
placeholders:
  - "{{project_name}}"
  - "{{author_name}}"
  - "{{backend_python_framework}}"
  - "{{frontend_js_framework}}"
  - "{{license_type}}"
